{"version":3,"sources":["redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice.ts","components/schedule/edit-daily-schedule/edit-daily-schedule.tsx","components/schedule/edit-daily-schedule/index.ts","components/schedule/edit-daily-schedule/edit-daily-schedule-container.tsx","constants/mockData.ts","components/schedule/schedule-body/schedule-driver-cell/schedule-driver-cell.tsx","components/schedule/schedule-body/schedule-body.tsx","components/schedule/schedule-body/index.ts","components/schedule/schedule-body/schedule-body-container.tsx","components/schedule/schedule-footer/schedule-footer.tsx","redux/features/schedule/schedule.slice.ts","components/schedule/schedule-footer/index.ts","components/schedule/schedule-footer/schedule-footer-container.tsx","components/schedule/schedule-datepicker/schedule-datepicker.tsx","components/schedule/schedule-header/schedule-header.tsx","components/schedule/schedule-header/index.ts","components/schedule/schedule-header/schedule-header-container.tsx","components/schedule/schedule.tsx","components/schedule/index.ts","components/schedule/schedule-container.tsx","App.tsx","reportWebVitals.ts","redux/root-reducer.ts","index.tsx"],"names":["editDailyScheduleModalSlice","createSlice","name","initialState","open","reducers","setEditDailyScheduleModalSliceState","state","action","payload","actions","EditDailySchedule","props","selectedDriverId","driverOptions","selectedStatusId","statusOptions","dialogProps","Dialog","DialogTitle","DialogContent","FormGroup","FormControl","InputLabel","Select","value","map","driverOption","MenuItem","id","statusOption","DialogActions","Button","variant","color","onClick","onClose","dispatch","useDispatch","editDailyScheduleModal","useSelector","MOCK_TABLE_RESPONSE","vehicles","drivers","scheduleScheme","date","schedule","driverId","vehicleId","useStyles","makeStyles","theme","root","display","flexFlow","backgroundColor","palette","grey","driverNameRow","height","borderBottom","justifyContent","alignItems","driverName","padding","borderRadius","fontWeight","background","whiteSpace","textOverflow","overflow","maxWidth","ScheduleDriverCell","driver","isMainDriver","classes","Paper","className","marginLeft","vehicleNameCellWidth","position","tableRoot","tableLayout","headerCell","textAlign","fontSize","width","renderDaysCount","cell","boxSizing","divider","borderLeft","content","top","textTransform","vehicleNameCell","right","vehicleNameContainer","ScheduleBody","tableResponse","startDate","onEditDateClick","endDate","moment","add","targetDates","d","isBefore","push","TableContainer","Table","TableHead","TableCell","format","TableBody","vehicle","vehicleIndex","TableRow","today","clickedDate","todaySchedule","find","s","isSame","isFirstDayInMonth","data-month","classnames","selectedDate","useTheme","useMediaQuery","breakpoints","down","ScheduleFooter","onArrowClick","handleArrowClick","direction","Box","ArrowLeft","ArrowRight","toISOString","fetchTableData","createAsyncThunk","dateRange","a","Promise","r","setTimeout","response","scheduleSlice","setScheduleSliceState","extraReducers","builder","addCase","fulfilled","e","newDate","subtract","flexWrap","dateString","cursor","ScheduleDatepicker","onDateChange","handleDateChange","set","title","marginRight","button","selector","marginTop","ScheduleHeader","flex","Schedule","elevation","fullWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","scheduleReducer","editDailyScheduleModalReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df536077.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver } from \"../../../types/table-data\";\r\n\r\nexport type IEditDailyScheduleModalState = {\r\n  open: boolean;\r\n  selectedDriverId?: number;\r\n  driverOptions?: IDriver[];\r\n  selectedStatusId?: number;\r\n  statusOptions?: IStatus[];\r\n}\r\n\r\nconst initialState: IEditDailyScheduleModalState = {\r\n  open: false\r\n}\r\n\r\nconst editDailyScheduleModalSlice = createSlice({\r\n  name: 'editDailyScheduleModal',\r\n  initialState,\r\n  reducers: {\r\n    setEditDailyScheduleModalSliceState: (state, action: PayloadAction<Partial<IEditDailyScheduleModalState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n})\r\n\r\nexport const { setEditDailyScheduleModalSliceState } = editDailyScheduleModalSlice.actions;\r\nexport default editDailyScheduleModalSlice.reducer;","import { Button, Dialog, DialogActions, DialogContent, DialogProps, DialogTitle, FormControl, FormGroup, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IStatus } from '../../../types/status'\r\nimport { IDriver } from '../../../types/table-data'\r\n\r\nexport type IEditDailyScheduleProps = DialogProps & {\r\n  selectedDriverId?: number;\r\n  driverOptions?: IDriver[];\r\n  selectedStatusId?: number;\r\n  statusOptions?: IStatus[];\r\n}\r\n\r\nexport default function EditDailySchedule(props: IEditDailyScheduleProps) {\r\n  const { selectedDriverId = null, driverOptions, selectedStatusId = null, statusOptions, ...dialogProps } = props;\r\n  return (\r\n    <Dialog {...dialogProps}>\r\n      <DialogTitle>Назначить водителя</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <FormGroup>\r\n          <FormControl>\r\n            <InputLabel>Водитель</InputLabel>\r\n            <Select value={selectedDriverId}>\r\n              {\r\n                driverOptions && driverOptions.map(driverOption => (\r\n                  <MenuItem value={driverOption.id}>{ driverOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <InputLabel>Статус</InputLabel>\r\n            <Select value={selectedStatusId}>\r\n              {\r\n                statusOptions && statusOptions.map(statusOption => (\r\n                  <MenuItem value={statusOption.id}>{ statusOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </FormGroup>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant='contained' color='primary'>Сохранить</Button>\r\n        <Button onClick={() => dialogProps.onClose && dialogProps.onClose({}, 'backdropClick')}>Назад</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import EditDailyScheduleContainer from \"./edit-daily-schedule-container\";\r\n\r\nexport const EditDailySchedule = EditDailyScheduleContainer;","import { DialogProps } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport EditDailySchedule from './edit-daily-schedule';\r\n\r\nexport default function EditDailyScheduleContainer(props: Partial<DialogProps>) {\r\n  const dispatch = useDispatch();\r\n  const editDailyScheduleModal = useSelector((state: IRootState) => state.editDailyScheduleModal);\r\n\r\n  const handleClose = () => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ open: false }));\r\n  }\r\n\r\n  return (\r\n    <EditDailySchedule {...props} open={editDailyScheduleModal.open} onClose={handleClose} />\r\n  )\r\n}\r\n","import { ITableResponse } from \"../types/table-data\";\r\n\r\nexport const MOCK_TABLE_RESPONSE: ITableResponse = {\r\n  vehicles: [\r\n    { id: 0, name: 'Volkswagen Polo' },\r\n    { id: 1, name: 'Volkswagen Polo' },\r\n    { id: 2, name: 'Volkswagen Passat' }\r\n  ],\r\n  drivers: [\r\n    { id: 0, name: 'Driver 1' },\r\n    { id: 1, name: 'Driver 2' }\r\n  ],\r\n  scheduleScheme: [\r\n    { \r\n      date: '2021-02-25',\r\n      schedule: [{ driverId: 0, vehicleId: 0 }]\r\n    },\r\n    { \r\n      date: '2021-02-26',\r\n      schedule: [{ driverId: 1, vehicleId: 1 }]\r\n    },\r\n    { \r\n      date: '2021-02-27',\r\n      schedule: [{ driverId: 1, vehicleId: 2 }]\r\n    },\r\n  ]\r\n}","import { makeStyles, Paper } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { IDriver } from '../../../../types/table-data'\r\n\r\nexport type IScheduleDriverCellProps = {\r\n  driver?: IDriver;\r\n  isMainDriver?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n  },\r\n  driverNameRow: {\r\n    height: 32,\r\n    '&:first-child': {\r\n      borderBottom: `1px solid ${theme.palette.grey[400]}`\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  driverName: {\r\n    padding: '0 4px',\r\n    borderRadius: 4,\r\n    fontWeight: 500,\r\n    background: theme.palette.grey[500],\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    maxWidth: 70,\r\n  }\r\n}));\r\n\r\nexport default function ScheduleDriverCell(props: IScheduleDriverCellProps) {\r\n  const { driver, isMainDriver = true } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.driverNameRow}>\r\n        {\r\n          isMainDriver && (\r\n            <span className={classes.driverName}>{ driver?.name }</span>\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div className={classes.driverNameRow}>\r\n        {\r\n          !isMainDriver && (\r\n            <span className={classes.driverName}>{ driver?.name }</span>\r\n          )\r\n        }\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { ITableResponse, IVehicle } from '../../../types/table-data';\r\nimport ScheduleDriverCell from './schedule-driver-cell/schedule-driver-cell';\r\nimport moment from 'moment';\r\nimport { IScheduleBodyContainerProps } from './schedule-body-container';\r\nimport classnames from 'classnames';\r\n\r\n// MISC\r\nconst rowHeight = 81;\r\n\r\nexport type IScheduleBodyProps = IScheduleBodyContainerProps & {\r\n  tableResponse: ITableResponse;\r\n  startDate: moment.Moment;\r\n  renderDaysCount: number;\r\n  vehicleNameCellWidth: number;\r\n}\r\n\r\n// CSS\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '20px 0',\r\n    marginLeft: (props: IScheduleBodyProps) => props.vehicleNameCellWidth,\r\n    position: 'relative',\r\n    '& .MuiTableCell-root': {\r\n      borderBottom: 'none',\r\n    }\r\n  },\r\n  tableRoot: {\r\n    tableLayout: 'fixed'\r\n  },\r\n  headerCell: {\r\n    textAlign: 'center',\r\n    fontSize: 'inherit',\r\n    width: (props: IScheduleBodyProps) => `calc(100% / ${props.renderDaysCount})`\r\n  },\r\n  cell: {\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    position: 'relative',\r\n    fontSize: 'inherit'\r\n  },\r\n  divider: {\r\n    borderLeft: `1px solid ${theme.palette.grey[500]}`,\r\n    '&:before': {\r\n      content: 'attr(data-month)',\r\n      position: 'absolute',\r\n      top: -12,\r\n      fontWeight: 500,\r\n      textTransform: 'capitalize'\r\n    }\r\n  },\r\n  vehicleNameCell: {\r\n    position: 'absolute',\r\n    width: (props: IScheduleBodyProps) => props.vehicleNameCellWidth,\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    right: '100%',\r\n    textAlign: 'left'\r\n  },\r\n  vehicleNameContainer: {\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport default function ScheduleBody(props: IScheduleBodyProps) {\r\n  const { tableResponse, startDate, renderDaysCount = 7, onEditDateClick } = props;\r\n  const { scheduleScheme, vehicles, drivers } = tableResponse;\r\n  const classes = useStyles(props);\r\n\r\n  // CREATE AN ARRAY OF DATES TO RENDER\r\n  const endDate = moment(startDate).add(renderDaysCount, 'days');\r\n  const targetDates: moment.Moment[] = [];\r\n  for (let d = moment(startDate); d.isBefore(endDate); d.add(1, 'day')) {\r\n    targetDates.push(moment(d));\r\n  }\r\n\r\n  const handleEditDateClick = (clickedDate: moment.Moment) => () => {\r\n    onEditDateClick && onEditDateClick(clickedDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer>\r\n        <Table className={classes.tableRoot}>\r\n          {/* TABLE HEADER (DATES) */}\r\n          <TableHead>\r\n            <TableCell className={classes.vehicleNameCell}></TableCell>\r\n\r\n            {\r\n              targetDates.map(d => <TableCell className={classes.headerCell}>{ d.format('DD, dd') }</TableCell>)\r\n            }\r\n          </TableHead>\r\n\r\n          {/* TABLE BODY */}\r\n          <TableBody>\r\n            {\r\n              vehicles.map((vehicle: IVehicle, vehicleIndex) => (\r\n                <TableRow key={vehicle.id}>\r\n                  {/* VEHICLE NAME */}\r\n                  <th className={classes.vehicleNameCell}>\r\n                    <Paper className={classes.vehicleNameContainer}>\r\n                      { vehicle.name }\r\n                    </Paper>\r\n                  </th>\r\n\r\n                  {/* VEHIICLE DAILY SCHEDULE */}\r\n                  {\r\n                    targetDates.map(today => {\r\n                      /** Schedule for `vehicle` at current `date` */\r\n                      const todaySchedule = scheduleScheme.find(s => moment(s.date).isSame(today, 'day'))?.schedule\r\n                        .find(s => s.vehicleId === vehicle.id);\r\n                      \r\n                      const isFirstDayInMonth = today.date() === 1;\r\n                      const driver = drivers.find(d => d.id === todaySchedule?.driverId);\r\n\r\n                      return (\r\n                        <TableCell\r\n                          data-month={vehicleIndex === 0 ? today.format('MMMM') : ''}\r\n                          className={classnames(classes.cell, { [classes.divider]: isFirstDayInMonth })}\r\n                          onClick={handleEditDateClick(today)}\r\n                        >\r\n                          <ScheduleDriverCell\r\n                            driver={driver}\r\n                            isMainDriver={todaySchedule?.isMainDriver}\r\n                          />\r\n                        </TableCell>\r\n                      )\r\n                    })\r\n                  }\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleBodyContainer from \"./schedule-body-container\";\r\n\r\nexport const ScheduleBody = ScheduleBodyContainer;","import React from 'react'\r\nimport { MOCK_TABLE_RESPONSE } from '../../../constants/mockData'\r\nimport ScheduleBody from './schedule-body'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nexport type IScheduleBodyContainerProps = {\r\n  onEditDateClick?: (date: moment.Moment) => any;\r\n}\r\n\r\nexport default function ScheduleBodyContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n\r\n  const handleEditDateClick = () => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ open: true }));\r\n  }\r\n\r\n  const theme = useTheme();\r\n  const downMd = useMediaQuery(theme.breakpoints.down('md'));\r\n  const downSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n  let renderDaysCount = 7;\r\n  let vehicleNameCellWidth = 200;\r\n\r\n  if (downMd) {\r\n    renderDaysCount = 3;\r\n    vehicleNameCellWidth = 150;\r\n  }\r\n\r\n  if (downSm) {\r\n    renderDaysCount = 2;\r\n    vehicleNameCellWidth = 100;\r\n  }\r\n\r\n  return (\r\n    <ScheduleBody\r\n      renderDaysCount={renderDaysCount}\r\n      vehicleNameCellWidth={vehicleNameCellWidth}\r\n      startDate={moment(selectedDate)}\r\n      tableResponse={MOCK_TABLE_RESPONSE}\r\n      onEditDateClick={handleEditDateClick}\r\n    />\r\n  )\r\n}","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nexport type IScheduleFooterArrowClickEvent = {\r\n  direction: 'prev' | 'next';\r\n}\r\n\r\nexport type IScheduleFooterProps = {\r\n  onArrowClick?: (e: IScheduleFooterArrowClickEvent) => any;\r\n}\r\n\r\nexport default function ScheduleFooter(props: IScheduleFooterProps) {\r\n  const classes = useStyles();\r\n  const { onArrowClick } = props;\r\n\r\n  const handleArrowClick = (direction: 'prev' | 'next') => () => {\r\n    onArrowClick && onArrowClick({ direction });\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display='flex' justifyContent='space-between' width={150}>\r\n        <Button variant='contained' onClick={handleArrowClick('prev')}>\r\n          <ArrowLeft />\r\n        </Button>\r\n\r\n        <Button variant='contained' onClick={handleArrowClick('next')}>\r\n          <ArrowRight />\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport moment from 'moment';\r\nimport { IDateRange } from \"../../../types/date-range\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver, IScheduleScheme, ITableResponse } from \"../../../types/table-data\";\r\n\r\nexport type IScheduleScliceState = {\r\n  selectedDate: string;\r\n  drivers?: IDriver[];\r\n  statuses?: IStatus[];\r\n  scheduleScheme?: IScheduleScheme[];\r\n}\r\n\r\nconst initialState: IScheduleScliceState = {\r\n  selectedDate: moment().toISOString(),\r\n}\r\n\r\nconst fetchTableData = createAsyncThunk(\r\n  'schedule/fetchTableData',\r\n  async (dateRange: IDateRange) => {\r\n    const response: ITableResponse = await new Promise(r => {\r\n      setTimeout(r, 1000);\r\n    });\r\n\r\n    return response;\r\n  }\r\n)\r\n\r\nexport const scheduleSlice = createSlice({\r\n  name: 'schedule',\r\n  initialState,\r\n  reducers: {\r\n    setScheduleSliceState: (state, action: PayloadAction<Partial<IScheduleScliceState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder.addCase(fetchTableData.fulfilled, (state, action) => {\r\n      return { ...state, ...action.payload }\r\n    })\r\n  }\r\n})\r\n\r\nexport const { setScheduleSliceState } = scheduleSlice.actions;\r\nexport default scheduleSlice.reducer;","import ScheduleFooterContainer from \"./schedule-footer-container\";\r\n\r\nexport const ScheduleFooter = ScheduleFooterContainer;","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport ScheduleFooter, { IScheduleFooterArrowClickEvent } from './schedule-footer';\r\nimport moment from 'moment';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\n\r\nexport default function ScheduleFooterContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n\r\n  const handleArrowClick = (e: IScheduleFooterArrowClickEvent) => {\r\n    const newDate = moment(selectedDate);\r\n\r\n    if (e.direction === 'prev') {\r\n      newDate.subtract(1, 'day');\r\n    } else {\r\n      newDate.add(1, 'day');\r\n    }\r\n\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleFooter onArrowClick={handleArrowClick} />\r\n  )\r\n}\r\n","import { Button, makeStyles, TextField } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight, ConstructionOutlined } from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nexport type IScheduleDatepickerProps = {\r\n  date?: moment.Moment;\r\n  onDateChange?: (selectedDate: moment.Moment) => any;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    background: theme.palette.grey[300],\r\n    borderRadius: 4\r\n  },\r\n  dateString: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 120,\r\n    textAlign: 'center',\r\n    cursor: 'default',\r\n    textTransform: 'capitalize',\r\n    fontWeight: 500\r\n  }\r\n}));\r\n\r\nexport default function ScheduleDatepicker(props: IScheduleDatepickerProps) {\r\n  const { date = moment(), onDateChange } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (direction: 'prev' | 'next') => () => {\r\n    let newDate;\r\n\r\n    if (direction === 'prev') {\r\n      newDate = moment(date).subtract(1, 'month').set('date', 1);\r\n    } else {\r\n      newDate = moment(date).add(1, 'month').set('date', 1);\r\n    }\r\n\r\n    onDateChange && onDateChange(newDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={handleDateChange('prev')}>\r\n        <ArrowLeft />\r\n      </Button>\r\n      \r\n      <Moment className={classes.dateString} date={date} format='MMMM, YYYY' />\r\n\r\n      <Button onClick={handleDateChange('next')}>\r\n        <ArrowRight />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ScheduleDatepicker from '../schedule-datepicker/schedule-datepicker';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexFlow: 'column'\r\n    }\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    marginRight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: 14\r\n    }\r\n  },\r\n  button: {\r\n    fontSize: 'inherit !important'\r\n  },\r\n  selector: {\r\n    marginLeft: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 'unset',\r\n      marginTop: 32\r\n    }\r\n  }\r\n}));\r\n\r\nexport type IScheduleHeaderProps = {\r\n  date: moment.Moment;\r\n  onDateChange?: (newDate: moment.Moment) => any;\r\n}\r\n\r\nexport default function ScheduleHeader(props: IScheduleHeaderProps) {\r\n  const classes = useStyles();\r\n  const { date, onDateChange } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <span className={classes.title}>Календарь списаний</span>\r\n        <Button className={classes.button} variant='contained' color='secondary'>Списать аренду</Button>\r\n      </div>\r\n      \r\n      <div className={classes.selector}>\r\n        <ScheduleDatepicker date={date} onDateChange={onDateChange} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleHeaderContainer from './schedule-header-container';\r\n\r\nexport const ScheduleHeader = ScheduleHeaderContainer;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\nimport ScheduleHeader from './schedule-header'\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport moment from 'moment';\r\n\r\nexport default function ScheduleHeaderContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n  \r\n  const handleDateChange = (newDate: moment.Moment) => {\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleHeader date={moment(selectedDate)} onDateChange={handleDateChange} />\r\n  )\r\n}\r\n","import { makeStyles, Paper } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { EditDailySchedule } from './edit-daily-schedule'\r\nimport { ScheduleBody } from './schedule-body'\r\nimport { ScheduleFooter } from './schedule-footer'\r\nimport { ScheduleHeader } from './schedule-header'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexFlow: 'column',\r\n    padding: 20,\r\n    maxWidth: '100%',\r\n    boxSizing: 'border-box'\r\n  }\r\n}))\r\n\r\nexport default function Schedule() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <ScheduleHeader />\r\n      <ScheduleBody />\r\n      <ScheduleFooter />\r\n\r\n      <EditDailySchedule fullWidth />\r\n    </Paper>\r\n  )\r\n}\r\n","import ScheduleContainer from \"./schedule-container\";\r\n\r\nexport const Schedule = ScheduleContainer; ","import React from 'react'\r\nimport Schedule from './schedule'\r\n\r\nexport default function ScheduleContainer() {\r\n  return (\r\n    <Schedule />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Schedule } from './components/schedule';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    padding: 20,\r\n    maxWidth: 1200,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: 12\r\n    }\r\n  }\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Schedule />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport scheduleReducer from './features/schedule/schedule.slice'\r\nimport editDailyScheduleModalReducer from './features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  schedule: scheduleReducer,\r\n  editDailyScheduleModal: editDailyScheduleModalReducer\r\n});\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'moment/locale/ru';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReducer } from './redux/root-reducer';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type IAppDispatch = typeof store.dispatch;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}