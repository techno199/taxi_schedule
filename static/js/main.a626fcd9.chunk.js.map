{"version":3,"sources":["redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice.ts","components/schedule/edit-daily-schedule/edit-daily-schedule.tsx","components/schedule/edit-daily-schedule/index.ts","components/schedule/edit-daily-schedule/edit-daily-schedule-container.tsx","components/schedule/schedule-body/schedule-driver-cell/schedule-driver-cell.tsx","components/schedule/schedule-body/schedule-body.tsx","constants/mockData.ts","redux/features/schedule/schedule.slice.ts","components/schedule/schedule-body/index.ts","components/schedule/schedule-body/schedule-body-container.tsx","components/schedule/schedule-footer/schedule-footer.tsx","components/schedule/schedule-footer/index.ts","components/schedule/schedule-footer/schedule-footer-container.tsx","components/schedule/schedule-datepicker/schedule-datepicker.tsx","components/schedule/schedule-header/schedule-header.tsx","components/schedule/schedule-header/index.ts","components/schedule/schedule-header/schedule-header-container.tsx","components/schedule/schedule.tsx","components/schedule/index.ts","components/schedule/schedule-container.tsx","App.tsx","reportWebVitals.ts","redux/root-reducer.ts","index.tsx"],"names":["editDailyScheduleModalSlice","createSlice","name","initialState","open","reducers","setEditDailyScheduleModalSliceState","state","action","payload","actions","useStyles","makeStyles","theme","formControl","marginBottom","EditDailySchedule","props","date","selectedDriverId","driverOptions","selectedStatusId","statusOptions","onDriverChange","onStatusChange","dialogProps","classes","handleChange","type","e","target","value","Dialog","DialogTitle","format","DialogContent","FormGroup","FormControl","className","InputLabel","Select","onChange","map","driverOption","MenuItem","id","statusOption","DialogActions","Button","variant","color","onClick","onClose","dispatch","useDispatch","useSelector","editDailyScheduleModal","schedule","moment","selectedDate","drivers","statuses","newDriverId","newStatusId","root","height","display","cursor","backgroundColor","status","wrapper","flex","flexFlow","transition","palette","grey","background","driverNameRow","borderBottom","justifyContent","alignItems","selectedText","padding","borderRadius","fontWeight","whiteSpace","textOverflow","overflow","maxWidth","width","ScheduleDriverCell","driver","isMainDriver","paperProps","Paper","classnames","style","marginLeft","vehicleNameCellWidth","position","tableRoot","tableLayout","headerCell","textAlign","fontSize","renderDaysCount","cell","boxSizing","divider","borderLeft","content","top","textTransform","vehicleNameCell","right","vehicleNameContainer","fab","spacing","bottom","ScheduleBody","scheduleScheme","vehicles","startDate","onEditDateClick","onReturnToTodayClick","fabLowerThreshold","subtract","fabGreaterThreshold","add","fabVisible","isBefore","isAfter","endDate","targetDates","d","push","TableContainer","Table","TableHead","TableCell","isSame","Chip","label","size","TableBody","vehicle","vehicleIndex","TableRow","today","clickedDate","vehicleId","driverId","statusId","todaySchedule","find","s","isFirstDayInMonth","data-month","Zoom","in","Fab","KeyboardReturn","MOCK_TABLE_RESPONSE","Math","random","toISOString","fetchTableData","createAsyncThunk","dateRange","a","Promise","r","setTimeout","response","scheduleSlice","setScheduleSliceState","extraReducers","builder","addCase","fulfilled","useTheme","useMediaQuery","breakpoints","down","selectedVehicleId","ScheduleFooter","onArrowClick","handleArrowClick","direction","Box","ArrowLeft","ArrowRight","newDate","flexWrap","dateString","ScheduleDatepicker","onDateChange","handleDateChange","set","title","marginRight","button","selector","marginTop","ScheduleHeader","Schedule","elevation","fullWidth","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","scheduleReducer","editDailyScheduleModalReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a626fcd9.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver } from \"../../../types/table-data\";\r\n\r\nexport type IEditDailyScheduleModalState = {\r\n  open: boolean;\r\n  selectedDate?: string;\r\n  selectedVehicleId?: number;\r\n  selectedDriverId?: number;\r\n  selectedStatusId?: number;\r\n}\r\n\r\nconst initialState: IEditDailyScheduleModalState = {\r\n  open: false\r\n}\r\n\r\nconst editDailyScheduleModalSlice = createSlice({\r\n  name: 'editDailyScheduleModal',\r\n  initialState,\r\n  reducers: {\r\n    setEditDailyScheduleModalSliceState: (state, action: PayloadAction<Partial<IEditDailyScheduleModalState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n})\r\n\r\nexport const { setEditDailyScheduleModalSliceState } = editDailyScheduleModalSlice.actions;\r\nexport default editDailyScheduleModalSlice.reducer;","import { Button, Dialog, DialogActions, DialogContent, DialogProps, DialogTitle, FormControl, FormGroup, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport React, { ChangeEvent } from 'react'\r\nimport { IStatus } from '../../../types/status'\r\nimport { IDriver } from '../../../types/table-data'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: 12\r\n    }\r\n  }\r\n}));\r\n\r\nexport type IEditDailyScheduleProps = DialogProps & {\r\n  date: moment.Moment;\r\n  selectedDriverId?: number;\r\n  driverOptions?: IDriver[];\r\n  selectedStatusId?: number;\r\n  statusOptions?: IStatus[];\r\n  onDriverChange?: (newDriverId: number) => any;\r\n  onStatusChange?: (newStatusId: number) => any;\r\n}\r\n\r\nexport default function EditDailySchedule(props: IEditDailyScheduleProps) {\r\n  const { date, selectedDriverId = null, driverOptions, selectedStatusId = null, statusOptions, onDriverChange, onStatusChange, ...dialogProps } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (type: 'driver' | 'status') => (e: ChangeEvent<any>) => {\r\n    switch (type) {\r\n      case 'driver':\r\n        onDriverChange && onDriverChange(e.target.value);\r\n        break;\r\n      case 'status':\r\n        onStatusChange && onStatusChange(e.target.value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog {...dialogProps}>\r\n      <DialogTitle>Назначить водителя на <u>{ date.format('LL') }</u></DialogTitle>\r\n\r\n      <DialogContent>\r\n        <FormGroup>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel>Водитель</InputLabel>\r\n            <Select value={selectedDriverId} onChange={handleChange('driver')}>\r\n              {\r\n                driverOptions && driverOptions.map(driverOption => (\r\n                  <MenuItem key={driverOption.id} value={driverOption.id}>{ driverOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <InputLabel>Статус</InputLabel>\r\n            <Select value={selectedStatusId} onChange={handleChange('status')}>\r\n              {\r\n                statusOptions && statusOptions.map(statusOption => (\r\n                  <MenuItem key={statusOption.id} value={statusOption.id}>{ statusOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </FormGroup>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant='contained' color='primary'>Сохранить</Button>\r\n        <Button onClick={() => dialogProps.onClose && dialogProps.onClose({}, 'backdropClick')}>Назад</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import EditDailyScheduleContainer from \"./edit-daily-schedule-container\";\r\n\r\nexport const EditDailySchedule = EditDailyScheduleContainer;","import { DialogProps } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport EditDailySchedule from './edit-daily-schedule';\r\nimport moment from 'moment';\r\n\r\nexport default function EditDailyScheduleContainer(props: Partial<DialogProps>) {\r\n  const dispatch = useDispatch();\r\n  const { editDailyScheduleModal, schedule } = useSelector((state: IRootState) => state);\r\n\r\n  const handleClose = () => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ open: false }));\r\n  }\r\n\r\n  const handleDriverChange = (newDriverId: number) => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ selectedDriverId: newDriverId }));\r\n  }\r\n\r\n  const handleStatusChange = (newStatusId: number) => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ selectedStatusId: newStatusId }));\r\n  }\r\n\r\n  return (\r\n    <EditDailySchedule\r\n      date={moment(editDailyScheduleModal.selectedDate)}\r\n      selectedDriverId={editDailyScheduleModal.selectedDriverId}\r\n      selectedStatusId={editDailyScheduleModal.selectedStatusId}\r\n      driverOptions={schedule.drivers}\r\n      statusOptions={schedule.statuses}\r\n      open={editDailyScheduleModal.open}\r\n      onDriverChange={handleDriverChange}\r\n      onStatusChange={handleStatusChange}\r\n      onClose={handleClose}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import { makeStyles, Paper } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { IStatus } from '../../../../types/status';\r\nimport { IDriver } from '../../../../types/table-data'\r\nimport classnames from 'classnames';\r\n\r\nexport type IScheduleDriverCellProps = {\r\n  driver?: IDriver;\r\n  status?: IStatus;\r\n  isMainDriver?: boolean;\r\n  onClick?: () => any;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    cursor: 'pointer',\r\n    backgroundColor: (props: IScheduleDriverCellProps) => `${props.status?.color} !important`\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexFlow: 'column',\r\n    transition: 'background-color .2s ease !important',\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n    '&:hover': {\r\n      backgroundColor: `${theme.palette.grey[500]} !important`,\r\n      '& .driver': {\r\n        background: theme.palette.grey[300]\r\n      }\r\n    }\r\n  },\r\n  driverNameRow: {\r\n    height: 32,\r\n    '&:not(:last-child)': {\r\n      borderBottom: `1px solid ${theme.palette.grey[400]}`\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  selectedText: {\r\n    padding: '0 4px',\r\n    borderRadius: 4,\r\n    fontWeight: 500,\r\n    transition: 'all .2s ease',\r\n    background: theme.palette.grey[500],\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    maxWidth: 70,\r\n  },\r\n  status: {\r\n    width: 10,\r\n    height: '100%',\r\n    \r\n  }\r\n}));\r\n\r\nexport default function ScheduleDriverCell(props: IScheduleDriverCellProps) {\r\n  const { driver, status, isMainDriver = true, ...paperProps } = props;\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Paper className={classes.root} {...paperProps}>\r\n      {/* DRIVER NAME */}\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.driverNameRow}>\r\n          {\r\n            isMainDriver && (\r\n              <span className={classnames(classes.selectedText, 'driver')}>{ driver?.name }</span>\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div className={classes.driverNameRow}>\r\n          {\r\n            !isMainDriver && (\r\n              <span className={classnames(classes.selectedText, 'driver')}>{ driver?.name }</span>\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div className={classes.driverNameRow}>\r\n          <span className={classes.selectedText} style={{ background: status?.color }}>{ status?.name }</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import { Chip, Fab, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Zoom } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { IDriver, IScheduleScheme, ITableResponse, IVehicle } from '../../../types/table-data';\r\nimport ScheduleDriverCell from './schedule-driver-cell/schedule-driver-cell';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport { KeyboardReturn, Today } from '@material-ui/icons';\r\nimport { IStatus } from '../../../types/status';\r\n\r\n// MISC\r\nconst rowHeight = 114;\r\n\r\nexport type IScheduleBodyProps = {\r\n  vehicles?: IVehicle[];\r\n  drivers?: IDriver[];\r\n  statuses?: IStatus[];\r\n  scheduleScheme?: IScheduleScheme[];\r\n  startDate: moment.Moment;\r\n  renderDaysCount: number;\r\n  vehicleNameCellWidth: number;\r\n  onEditDateClick?: (date: moment.Moment, vehicleId: number, driverId?: number, statusId?: number) => any;\r\n  onReturnToTodayClick?: () => any;\r\n}\r\n\r\n// CSS\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '20px 0',\r\n    marginLeft: (props: IScheduleBodyProps) => props.vehicleNameCellWidth,\r\n    position: 'relative',\r\n    '& .MuiTableCell-root': {\r\n      borderBottom: 'none',\r\n    }\r\n  },\r\n  tableRoot: {\r\n    tableLayout: 'fixed'\r\n  },\r\n  headerCell: {\r\n    textAlign: 'center',\r\n    fontSize: 'inherit',\r\n    whiteSpace: 'nowrap',\r\n    width: (props: IScheduleBodyProps) => `calc(100% / ${props.renderDaysCount})`\r\n  },\r\n  cell: {\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    position: 'relative',\r\n    fontSize: 'inherit'\r\n  },\r\n  divider: {\r\n    borderLeft: `1px solid ${theme.palette.grey[500]}`,\r\n    '&:before': {\r\n      content: 'attr(data-month)',\r\n      position: 'absolute',\r\n      top: -12,\r\n      fontWeight: 500,\r\n      textTransform: 'capitalize'\r\n    }\r\n  },\r\n  vehicleNameCell: {\r\n    position: 'absolute',\r\n    width: (props: IScheduleBodyProps) => props.vehicleNameCellWidth,\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    right: '100%',\r\n    textAlign: 'left'\r\n  },\r\n  vehicleNameContainer: {\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    right: theme.spacing(2),\r\n    bottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function ScheduleBody(props: IScheduleBodyProps) {\r\n  const { scheduleScheme, vehicles, drivers, statuses, startDate, renderDaysCount = 7, onEditDateClick, onReturnToTodayClick } = props;\r\n  const classes = useStyles(props);\r\n  \r\n  // FAB ZOOM THRESHOLD\r\n  const fabLowerThreshold = moment().subtract(7, 'days');\r\n  const fabGreaterThreshold = moment().add(7, 'days');\r\n  const fabVisible = startDate.isBefore(fabLowerThreshold) || startDate.isAfter(fabGreaterThreshold);\r\n\r\n  // CREATE AN ARRAY OF DATES TO RENDER\r\n  const endDate = moment(startDate).add(renderDaysCount, 'days');\r\n  const targetDates: moment.Moment[] = [];\r\n  for (let d = moment(startDate); d.isBefore(endDate); d.add(1, 'day')) {\r\n    targetDates.push(moment(d));\r\n  }\r\n\r\n  const handleEditDateClick = (clickedDate: moment.Moment, vehicleId: number, driverId?: number, statusId?: number) => () => {\r\n    onEditDateClick && onEditDateClick(clickedDate, vehicleId, driverId, statusId);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer>\r\n        <Table className={classes.tableRoot}>\r\n          {/* TABLE HEADER (DATES) */}\r\n          <TableHead>\r\n            <TableCell className={classes.vehicleNameCell}></TableCell>\r\n\r\n            {\r\n              targetDates.map(d => (\r\n                <TableCell className={classes.headerCell}>\r\n                  <span>{ d.format('DD, dd') } </span>\r\n                  \r\n                  {\r\n                    d.isSame(moment(), 'day') && (\r\n                      <Chip label='сегодня' size='small' color='secondary'></Chip>\r\n                    )\r\n                  }\r\n                </TableCell>\r\n              ))\r\n            }\r\n          </TableHead>\r\n\r\n          {/* TABLE BODY */}\r\n          <TableBody>\r\n            {\r\n              vehicles?.map((vehicle: IVehicle, vehicleIndex) => (\r\n                <TableRow key={vehicle.id}>\r\n                  {/* VEHICLE NAME */}\r\n                  <th className={classes.vehicleNameCell}>\r\n                    <Paper className={classes.vehicleNameContainer}>\r\n                      { vehicle.name }\r\n                    </Paper>\r\n                  </th>\r\n\r\n                  {/* VEHIICLE DAILY SCHEDULE */}\r\n                  {\r\n                    targetDates.map(today => {\r\n                      /** Schedule for `vehicle` at current `date` */\r\n                      const todaySchedule = scheduleScheme?.find(s => moment(s.date).isSame(today, 'day'))?.schedule\r\n                        .find(s => s.vehicleId === vehicle.id);\r\n                      \r\n                      const isFirstDayInMonth = today.date() === 1;\r\n                      const driver = drivers?.find(d => d.id === todaySchedule?.driverId);\r\n                      const status = statuses?.find(s => s.id === todaySchedule?.statusId); \r\n\r\n                      return (\r\n                        <TableCell\r\n                          data-month={vehicleIndex === 0 ? today.format('MMMM') : ''}\r\n                          className={classnames(classes.cell, { [classes.divider]: isFirstDayInMonth })}\r\n                        >\r\n                          <ScheduleDriverCell\r\n                            driver={driver}\r\n                            status={status}\r\n                            isMainDriver={todaySchedule?.isMainDriver}\r\n                            onClick={handleEditDateClick(today, vehicle.id, driver?.id, status?.id)}\r\n                          />\r\n                        </TableCell>\r\n                      )\r\n                    })\r\n                  }\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <Zoom in={fabVisible}>\r\n          <Fab\r\n            className={classes.fab}\r\n            color='secondary'\r\n            style={{position: 'absolute'}}\r\n            onClick={onReturnToTodayClick}\r\n          >\r\n            <KeyboardReturn />\r\n          </Fab>\r\n        </Zoom>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n","import { ITableResponse } from \"../types/table-data\";\r\n\r\nexport const MOCK_TABLE_RESPONSE: ITableResponse = {\r\n  vehicles: [\r\n    { id: 0, name: 'Volkswagen Polo' },\r\n    { id: 1, name: 'Volkswagen Polo' },\r\n    { id: 2, name: 'Volkswagen Passat' }\r\n  ],\r\n  drivers: [\r\n    { id: 0, name: 'Driver 1' },\r\n    { id: 1, name: 'Driver 2' }\r\n  ],\r\n  statuses: [\r\n    { id: 0, name: 'Выход', color: '#4caf50' },\r\n    { id: 1, name: 'Простой', color: '#f44336' },\r\n    { id: 2, name: 'Ремонт', color: '#ff9800' }\r\n  ],\r\n  scheduleScheme: [\r\n    { \r\n      date: '2021-02-25',\r\n      schedule: [{ driverId: 0, vehicleId: 0, statusId: 0, isMainDriver: Math.random() < 0.5 }]\r\n    },\r\n    { \r\n      date: '2021-02-26',\r\n      schedule: [{ driverId: 1, vehicleId: 1, statusId: 1, isMainDriver: Math.random() < 0.5 }]\r\n    },\r\n    { \r\n      date: '2021-02-27',\r\n      schedule: [{ driverId: 1, vehicleId: 2, statusId: 2, isMainDriver: Math.random() < 0.5 }]\r\n    },\r\n    { \r\n      date: '2021-02-28',\r\n      schedule: [{ driverId: 0, vehicleId: 0, statusId: 0, isMainDriver: Math.random() < 0.5 }, { driverId: 1, vehicleId: 2, statusId: 0, isMainDriver: Math.random() < 0.5 }]\r\n    },\r\n    { \r\n      date: '2021-03-1',\r\n      schedule: [{ driverId: 1, vehicleId: 2, statusId: 2, isMainDriver: Math.random() < 0.5 }]\r\n    },\r\n  ]\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport moment from 'moment';\r\nimport { MOCK_TABLE_RESPONSE } from \"../../../constants/mockData\";\r\nimport { IDateRange } from \"../../../types/date-range\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver, IScheduleScheme, ITableResponse, IVehicle } from \"../../../types/table-data\";\r\n\r\nexport type IScheduleScliceState = {\r\n  selectedDate: string;\r\n  vehicles?: IVehicle[];\r\n  drivers?: IDriver[];\r\n  statuses?: IStatus[];\r\n  scheduleScheme?: IScheduleScheme[];\r\n}\r\n\r\nconst initialState: IScheduleScliceState = {\r\n  selectedDate: moment().toISOString(),\r\n}\r\n\r\nexport const fetchTableData = createAsyncThunk(\r\n  'schedule/fetchTableData',\r\n  async (dateRange: IDateRange) => {\r\n    const response: ITableResponse = await new Promise(r => {\r\n      setTimeout(() => r(MOCK_TABLE_RESPONSE), 1000);\r\n    });\r\n\r\n    return response;\r\n  }\r\n)\r\n\r\nexport const scheduleSlice = createSlice({\r\n  name: 'schedule',\r\n  initialState,\r\n  reducers: {\r\n    setScheduleSliceState: (state, action: PayloadAction<Partial<IScheduleScliceState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder.addCase(fetchTableData.fulfilled, (state, action) => {\r\n      return { ...state, ...action.payload }\r\n    })\r\n  }\r\n})\r\n\r\nexport const { setScheduleSliceState } = scheduleSlice.actions;\r\nexport default scheduleSlice.reducer;","import ScheduleBodyContainer from \"./schedule-body-container\";\r\n\r\nexport const ScheduleBody = ScheduleBodyContainer;","import React from 'react'\r\nimport { MOCK_TABLE_RESPONSE } from '../../../constants/mockData'\r\nimport ScheduleBody from './schedule-body'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\n\r\nexport default function ScheduleBodyContainer() {\r\n  const dispatch = useDispatch();\r\n  const {selectedDate, vehicles, drivers, statuses, scheduleScheme} = useSelector((state: IRootState) => state.schedule);\r\n\r\n  const handleEditDateClick = (selectedDate: moment.Moment, vehicleId: number, driverId?: number, statusId?: number) => {\r\n    dispatch(setEditDailyScheduleModalSliceState({\r\n      open: true,\r\n      selectedDate: selectedDate.toISOString(),\r\n      selectedVehicleId: vehicleId,\r\n      selectedDriverId: driverId,\r\n      selectedStatusId: statusId\r\n    }));\r\n  }\r\n\r\n  const handleReturnToTodayClick = () => {\r\n    dispatch(setScheduleSliceState({ selectedDate: moment().toISOString() }));\r\n  }\r\n\r\n  const theme = useTheme();\r\n  const downLg = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const downMd = useMediaQuery(theme.breakpoints.down('md'));\r\n  const downSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n  let renderDaysCount = 7;\r\n  let vehicleNameCellWidth = 200;\r\n\r\n  if(downLg) {\r\n    renderDaysCount = 5;\r\n  }\r\n\r\n  if (downMd) {\r\n    renderDaysCount = 3;\r\n    vehicleNameCellWidth = 150;\r\n  }\r\n\r\n  if (downSm) {\r\n    renderDaysCount = 2;\r\n    vehicleNameCellWidth = 100;\r\n  }\r\n\r\n  return (\r\n    <ScheduleBody\r\n      vehicles={vehicles}\r\n      drivers={drivers}\r\n      statuses={statuses}\r\n      scheduleScheme={scheduleScheme}\r\n      renderDaysCount={renderDaysCount}\r\n      vehicleNameCellWidth={vehicleNameCellWidth}\r\n      startDate={moment(selectedDate)}\r\n      onEditDateClick={handleEditDateClick}\r\n      onReturnToTodayClick={handleReturnToTodayClick}\r\n    />\r\n  )\r\n}","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nexport type IScheduleFooterArrowClickEvent = {\r\n  direction: 'prev' | 'next';\r\n}\r\n\r\nexport type IScheduleFooterProps = {\r\n  onArrowClick?: (e: IScheduleFooterArrowClickEvent) => any;\r\n}\r\n\r\nexport default function ScheduleFooter(props: IScheduleFooterProps) {\r\n  const classes = useStyles();\r\n  const { onArrowClick } = props;\r\n\r\n  const handleArrowClick = (direction: 'prev' | 'next') => () => {\r\n    onArrowClick && onArrowClick({ direction });\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display='flex' justifyContent='space-between' width={150}>\r\n        <Button variant='contained' onClick={handleArrowClick('prev')}>\r\n          <ArrowLeft />\r\n        </Button>\r\n\r\n        <Button variant='contained' onClick={handleArrowClick('next')}>\r\n          <ArrowRight />\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleFooterContainer from \"./schedule-footer-container\";\r\n\r\nexport const ScheduleFooter = ScheduleFooterContainer;","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport ScheduleFooter, { IScheduleFooterArrowClickEvent } from './schedule-footer';\r\nimport moment from 'moment';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\n\r\nexport default function ScheduleFooterContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n\r\n  const handleArrowClick = (e: IScheduleFooterArrowClickEvent) => {\r\n    const newDate = moment(selectedDate);\r\n\r\n    if (e.direction === 'prev') {\r\n      newDate.subtract(1, 'day');\r\n    } else {\r\n      newDate.add(1, 'day');\r\n    }\r\n\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleFooter onArrowClick={handleArrowClick} />\r\n  )\r\n}\r\n","import { Button, makeStyles, TextField } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight, ConstructionOutlined } from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nexport type IScheduleDatepickerProps = {\r\n  date?: moment.Moment;\r\n  onDateChange?: (selectedDate: moment.Moment) => any;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    background: theme.palette.grey[300],\r\n    borderRadius: 4\r\n  },\r\n  dateString: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 120,\r\n    textAlign: 'center',\r\n    cursor: 'default',\r\n    textTransform: 'capitalize',\r\n    fontWeight: 500\r\n  }\r\n}));\r\n\r\nexport default function ScheduleDatepicker(props: IScheduleDatepickerProps) {\r\n  const { date = moment(), onDateChange } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (direction: 'prev' | 'next') => () => {\r\n    let newDate;\r\n\r\n    if (direction === 'prev') {\r\n      newDate = moment(date).subtract(1, 'month').set('date', 1);\r\n    } else {\r\n      newDate = moment(date).add(1, 'month').set('date', 1);\r\n    }\r\n\r\n    onDateChange && onDateChange(newDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={handleDateChange('prev')}>\r\n        <ArrowLeft />\r\n      </Button>\r\n      \r\n      <Moment className={classes.dateString} date={date} format='MMMM, YYYY' />\r\n\r\n      <Button onClick={handleDateChange('next')}>\r\n        <ArrowRight />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ScheduleDatepicker from '../schedule-datepicker/schedule-datepicker';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexFlow: 'column'\r\n    }\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    marginRight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: 14\r\n    }\r\n  },\r\n  button: {\r\n    fontSize: 'inherit !important'\r\n  },\r\n  selector: {\r\n    marginLeft: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 'unset',\r\n      marginTop: 32\r\n    }\r\n  }\r\n}));\r\n\r\nexport type IScheduleHeaderProps = {\r\n  date: moment.Moment;\r\n  onDateChange?: (newDate: moment.Moment) => any;\r\n}\r\n\r\nexport default function ScheduleHeader(props: IScheduleHeaderProps) {\r\n  const classes = useStyles();\r\n  const { date, onDateChange } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <span className={classes.title}>Календарь списаний</span>\r\n        <Button className={classes.button} variant='contained' color='secondary'>Списать аренду</Button>\r\n      </div>\r\n      \r\n      <div className={classes.selector}>\r\n        <ScheduleDatepicker date={date} onDateChange={onDateChange} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleHeaderContainer from './schedule-header-container';\r\n\r\nexport const ScheduleHeader = ScheduleHeaderContainer;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\nimport ScheduleHeader from './schedule-header'\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport moment from 'moment';\r\n\r\nexport default function ScheduleHeaderContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n  \r\n  const handleDateChange = (newDate: moment.Moment) => {\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleHeader date={moment(selectedDate)} onDateChange={handleDateChange} />\r\n  )\r\n}\r\n","import { makeStyles, Paper } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { EditDailySchedule } from './edit-daily-schedule'\r\nimport { ScheduleBody } from './schedule-body'\r\nimport { ScheduleFooter } from './schedule-footer'\r\nimport { ScheduleHeader } from './schedule-header'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexFlow: 'column',\r\n    padding: 20,\r\n    maxWidth: '100%',\r\n    boxSizing: 'border-box'\r\n  }\r\n}))\r\n\r\nexport default function Schedule() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <ScheduleHeader />\r\n      <ScheduleBody />\r\n      <ScheduleFooter />\r\n\r\n      <EditDailySchedule fullWidth />\r\n    </Paper>\r\n  )\r\n}\r\n","import ScheduleContainer from \"./schedule-container\";\r\n\r\nexport const Schedule = ScheduleContainer; ","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Schedule from './schedule'\r\nimport { fetchTableData } from '../../redux/features/schedule/schedule.slice';\r\nimport moment from 'moment';\r\n\r\nexport default function ScheduleContainer() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTableData({ startDate: moment(), endDate: moment() }))\r\n  }, []);\r\n\r\n  return (\r\n    <Schedule />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Schedule } from './components/schedule';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    padding: 20,\r\n    maxWidth: 1200,\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: 12\r\n    }\r\n  }\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Schedule />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport scheduleReducer from './features/schedule/schedule.slice'\r\nimport editDailyScheduleModalReducer from './features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  schedule: scheduleReducer,\r\n  editDailyScheduleModal: editDailyScheduleModalReducer\r\n});\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'moment/locale/ru';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReducer } from './redux/root-reducer';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type IAppDispatch = typeof store.dispatch;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}