{"version":3,"sources":["redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice.ts","components/schedule/edit-daily-schedule/edit-daily-schedule.tsx","components/schedule/edit-daily-schedule/index.ts","components/schedule/edit-daily-schedule/edit-daily-schedule-container.tsx","constants/mockData.ts","components/schedule/schedule-body/schedule-driver-cell/schedule-driver-cell.tsx","components/schedule/schedule-body/schedule-body.tsx","components/schedule/schedule-body/index.ts","components/schedule/schedule-body/schedule-body-container.tsx","components/schedule/schedule-footer/schedule-footer.tsx","redux/features/schedule/schedule.slice.ts","components/schedule/schedule-footer/index.ts","components/schedule/schedule-footer/schedule-footer-container.tsx","components/schedule/schedule-datepicker/schedule-datepicker.tsx","components/schedule/schedule-header/schedule-header.tsx","components/schedule/schedule-header/index.ts","components/schedule/schedule-header/schedule-header-container.tsx","components/schedule/schedule.tsx","components/schedule/index.ts","components/schedule/schedule-container.tsx","App.tsx","reportWebVitals.ts","redux/root-reducer.ts","index.tsx"],"names":["editDailyScheduleModalSlice","createSlice","name","initialState","open","reducers","setEditDailyScheduleModalSliceState","state","action","payload","actions","EditDailySchedule","props","selectedDriverId","driverOptions","selectedStatusId","statusOptions","dialogProps","Dialog","DialogTitle","DialogContent","FormGroup","FormControl","InputLabel","Select","value","map","driverOption","MenuItem","id","statusOption","DialogActions","Button","variant","color","onClick","onClose","dispatch","useDispatch","editDailyScheduleModal","useSelector","MOCK_TABLE_RESPONSE","vehicles","drivers","scheduleScheme","date","schedule","driverId","vehicleId","useStyles","makeStyles","theme","root","display","flexFlow","backgroundColor","palette","grey","driverNameRow","height","borderBottom","justifyContent","alignItems","driverName","padding","borderRadius","fontWeight","background","whiteSpace","textOverflow","overflow","maxWidth","ScheduleDriverCell","driver","isMainDriver","classes","Paper","className","marginLeft","position","tableRoot","tableLayout","minWidth","headerCell","textAlign","width","cell","boxSizing","divider","borderLeft","content","top","textTransform","vehicleNameCell","right","vehicleNameContainer","ScheduleBody","tableResponse","startDate","onEditDateClick","endDate","moment","add","targetDates","d","isBefore","push","TableContainer","Table","TableHead","TableCell","format","TableBody","vehicle","vehicleIndex","TableRow","today","clickedDate","todaySchedule","find","s","isSame","isFirstDayInMonth","console","log","data-month","classnames","selectedDate","ScheduleFooter","onArrowClick","handleArrowClick","direction","Box","ArrowLeft","ArrowRight","toISOString","fetchTableData","createAsyncThunk","dateRange","a","Promise","r","setTimeout","response","scheduleSlice","setScheduleSliceState","extraReducers","builder","addCase","fulfilled","e","newDate","subtract","dateString","cursor","ScheduleDatepicker","onDateChange","handleDateChange","set","title","fontSize","marginRight","ScheduleHeader","flex","Schedule","elevation","fullWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","scheduleReducer","editDailyScheduleModalReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7d9a5f.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver } from \"../../../types/table-data\";\r\n\r\nexport type IEditDailyScheduleModalState = {\r\n  open: boolean;\r\n  selectedDriverId?: number;\r\n  driverOptions?: IDriver[];\r\n  selectedStatusId?: number;\r\n  statusOptions?: IStatus[];\r\n}\r\n\r\nconst initialState: IEditDailyScheduleModalState = {\r\n  open: false\r\n}\r\n\r\nconst editDailyScheduleModalSlice = createSlice({\r\n  name: 'editDailyScheduleModal',\r\n  initialState,\r\n  reducers: {\r\n    setEditDailyScheduleModalSliceState: (state, action: PayloadAction<Partial<IEditDailyScheduleModalState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n})\r\n\r\nexport const { setEditDailyScheduleModalSliceState } = editDailyScheduleModalSlice.actions;\r\nexport default editDailyScheduleModalSlice.reducer;","import { Button, Dialog, DialogActions, DialogContent, DialogProps, DialogTitle, FormControl, FormGroup, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IStatus } from '../../../types/status'\r\nimport { IDriver } from '../../../types/table-data'\r\n\r\nexport type IEditDailyScheduleProps = DialogProps & {\r\n  selectedDriverId?: number;\r\n  driverOptions?: IDriver[];\r\n  selectedStatusId?: number;\r\n  statusOptions?: IStatus[];\r\n}\r\n\r\nexport default function EditDailySchedule(props: IEditDailyScheduleProps) {\r\n  const { selectedDriverId = null, driverOptions, selectedStatusId = null, statusOptions, ...dialogProps } = props;\r\n  return (\r\n    <Dialog {...dialogProps}>\r\n      <DialogTitle>Назначить водителя</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <FormGroup>\r\n          <FormControl>\r\n            <InputLabel>Водитель</InputLabel>\r\n            <Select value={selectedDriverId}>\r\n              {\r\n                driverOptions && driverOptions.map(driverOption => (\r\n                  <MenuItem value={driverOption.id}>{ driverOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <InputLabel>Статус</InputLabel>\r\n            <Select value={selectedStatusId}>\r\n              {\r\n                statusOptions && statusOptions.map(statusOption => (\r\n                  <MenuItem value={statusOption.id}>{ statusOption.name }</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </FormGroup>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant='contained' color='primary'>Сохранить</Button>\r\n        <Button onClick={() => dialogProps.onClose && dialogProps.onClose({}, 'backdropClick')}>Назад</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import EditDailyScheduleContainer from \"./edit-daily-schedule-container\";\r\n\r\nexport const EditDailySchedule = EditDailyScheduleContainer;","import { DialogProps } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport EditDailySchedule from './edit-daily-schedule';\r\n\r\nexport default function EditDailyScheduleContainer(props: Partial<DialogProps>) {\r\n  const dispatch = useDispatch();\r\n  const editDailyScheduleModal = useSelector((state: IRootState) => state.editDailyScheduleModal);\r\n\r\n  const handleClose = () => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ open: false }));\r\n  }\r\n\r\n  return (\r\n    <EditDailySchedule {...props} open={editDailyScheduleModal.open} onClose={handleClose} />\r\n  )\r\n}\r\n","import { ITableResponse } from \"../types/table-data\";\r\n\r\nexport const MOCK_TABLE_RESPONSE: ITableResponse = {\r\n  vehicles: [\r\n    { id: 0, name: 'Volkswagen Polo' },\r\n    { id: 1, name: 'Volkswagen Polo' },\r\n    { id: 2, name: 'Volkswagen Passat' }\r\n  ],\r\n  drivers: [\r\n    { id: 0, name: 'Driver 1' },\r\n    { id: 1, name: 'Driver 2' }\r\n  ],\r\n  scheduleScheme: [\r\n    { \r\n      date: '2021-02-25',\r\n      schedule: [{ driverId: 0, vehicleId: 0 }]\r\n    },\r\n    { \r\n      date: '2021-02-26',\r\n      schedule: [{ driverId: 1, vehicleId: 1 }]\r\n    },\r\n    { \r\n      date: '2021-02-27',\r\n      schedule: [{ driverId: 1, vehicleId: 2 }]\r\n    },\r\n  ]\r\n}","import { makeStyles, Paper } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { IDriver } from '../../../../types/table-data'\r\n\r\nexport type IScheduleDriverCellProps = {\r\n  driver?: IDriver;\r\n  isMainDriver?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n  },\r\n  driverNameRow: {\r\n    height: 32,\r\n    '&:first-child': {\r\n      borderBottom: `1px solid ${theme.palette.grey[400]}`\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  driverName: {\r\n    padding: '0 4px',\r\n    borderRadius: 4,\r\n    fontWeight: 500,\r\n    background: theme.palette.grey[500],\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    maxWidth: 70,\r\n  }\r\n}));\r\n\r\nexport default function ScheduleDriverCell(props: IScheduleDriverCellProps) {\r\n  const { driver, isMainDriver = true } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.driverNameRow}>\r\n        {\r\n          isMainDriver && (\r\n            <span className={classes.driverName}>{ driver?.name }</span>\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div className={classes.driverNameRow}>\r\n        {\r\n          !isMainDriver && (\r\n            <span className={classes.driverName}>{ driver?.name }</span>\r\n          )\r\n        }\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { ITableResponse, IVehicle } from '../../../types/table-data';\r\nimport ScheduleDriverCell from './schedule-driver-cell/schedule-driver-cell';\r\nimport moment from 'moment';\r\nimport { IScheduleBodyContainerProps } from './schedule-body-container';\r\nimport classnames from 'classnames';\r\n\r\n// MISC\r\nconst vehicleNameCellWidth = 200;\r\nconst rowHeight = 81;\r\n\r\nexport type IScheduleBodyProps = IScheduleBodyContainerProps & {\r\n  tableResponse: ITableResponse;\r\n  startDate: moment.Moment;\r\n}\r\n\r\n// CSS\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '20px 0',\r\n    marginLeft: vehicleNameCellWidth,\r\n    position: 'relative',\r\n    '& .MuiTableCell-root': {\r\n      borderBottom: 'none',\r\n    }\r\n  },\r\n  tableRoot: {\r\n    tableLayout: 'fixed',\r\n    minWidth: 600\r\n  },\r\n  headerCell: {\r\n    textAlign: 'center',\r\n    width: 'calc(100% / 7)'\r\n  },\r\n  cell: {\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    position: 'relative'\r\n  },\r\n  divider: {\r\n    borderLeft: `1px solid ${theme.palette.grey[500]}`,\r\n    '&:before': {\r\n      content: 'attr(data-month)',\r\n      position: 'absolute',\r\n      top: -12,\r\n      fontWeight: 500,\r\n      textTransform: 'capitalize'\r\n    }\r\n  },\r\n  vehicleNameCell: {\r\n    position: 'absolute',\r\n    width: vehicleNameCellWidth,\r\n    height: rowHeight,\r\n    boxSizing: 'border-box',\r\n    padding: 8,\r\n    right: '100%',\r\n    textAlign: 'left'\r\n  },\r\n  vehicleNameContainer: {\r\n    backgroundColor: `${theme.palette.grey[300]} !important`,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nexport default function ScheduleBody(props: IScheduleBodyProps) {\r\n  const { tableResponse, startDate, onEditDateClick } = props;\r\n  const { scheduleScheme, vehicles, drivers } = tableResponse;\r\n  const classes = useStyles();\r\n\r\n  // CREATE AN ARRAY OF DATES TO RENDER\r\n  const endDate = moment(startDate).add(7, 'days');\r\n  const targetDates: moment.Moment[] = [];\r\n  for (let d = moment(startDate); d.isBefore(endDate); d.add(1, 'day')) {\r\n    targetDates.push(moment(d));\r\n  }\r\n\r\n  const handleEditDateClick = (clickedDate: moment.Moment) => () => {\r\n    onEditDateClick && onEditDateClick(clickedDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer>\r\n        <Table className={classes.tableRoot}>\r\n          {/* TABLE HEADER (DATES) */}\r\n          <TableHead>\r\n            <TableCell className={classes.vehicleNameCell}></TableCell>\r\n\r\n            {\r\n              targetDates.map(d => <TableCell className={classes.headerCell}>{ d.format('DD, dd') }</TableCell>)\r\n            }\r\n          </TableHead>\r\n\r\n          {/* TABLE BODY */}\r\n          <TableBody>\r\n            {\r\n              vehicles.map((vehicle: IVehicle, vehicleIndex) => (\r\n                <TableRow key={vehicle.id}>\r\n                  {/* VEHICLE NAME */}\r\n                  <th className={classes.vehicleNameCell}>\r\n                    <Paper className={classes.vehicleNameContainer}>\r\n                      { vehicle.name }\r\n                    </Paper>\r\n                  </th>\r\n\r\n                  {/* VEHIICLE DAILY SCHEDULE */}\r\n                  {\r\n                    targetDates.map(today => {\r\n                      /** Schedule for `vehicle` at current `date` */\r\n                      const todaySchedule = scheduleScheme.find(s => moment(s.date).isSame(today, 'day'))?.schedule\r\n                        .find(s => s.vehicleId === vehicle.id);\r\n                      \r\n                      const isFirstDayInMonth = today.date() === 1;\r\n                      const driver = drivers.find(d => d.id === todaySchedule?.driverId);\r\n                      console.log(scheduleScheme)\r\n\r\n                      return (\r\n                        <TableCell\r\n                          data-month={vehicleIndex === 0 ? today.format('MMMM') : ''}\r\n                          className={classnames(classes.cell, { [classes.divider]: isFirstDayInMonth })}\r\n                          onClick={handleEditDateClick(today)}\r\n                        >\r\n                          <ScheduleDriverCell\r\n                            driver={driver}\r\n                            isMainDriver={todaySchedule?.isMainDriver}\r\n                          />\r\n                        </TableCell>\r\n                      )\r\n                    })\r\n                  }\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleBodyContainer from \"./schedule-body-container\";\r\n\r\nexport const ScheduleBody = ScheduleBodyContainer;","import React from 'react'\r\nimport { MOCK_TABLE_RESPONSE } from '../../../constants/mockData'\r\nimport ScheduleBody from './schedule-body'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport { setEditDailyScheduleModalSliceState } from '../../../redux/features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\n\r\nexport type IScheduleBodyContainerProps = {\r\n  onEditDateClick?: (date: moment.Moment) => any;\r\n}\r\n\r\nexport default function ScheduleBodyContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n\r\n  const handleEditDateClick = () => {\r\n    dispatch(setEditDailyScheduleModalSliceState({ open: true }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleBody\r\n      startDate={moment(selectedDate)}\r\n      tableResponse={MOCK_TABLE_RESPONSE}\r\n      onEditDateClick={handleEditDateClick}\r\n    />\r\n  )\r\n}","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nexport type IScheduleFooterArrowClickEvent = {\r\n  direction: 'prev' | 'next';\r\n}\r\n\r\nexport type IScheduleFooterProps = {\r\n  onArrowClick?: (e: IScheduleFooterArrowClickEvent) => any;\r\n}\r\n\r\nexport default function ScheduleFooter(props: IScheduleFooterProps) {\r\n  const classes = useStyles();\r\n  const { onArrowClick } = props;\r\n\r\n  const handleArrowClick = (direction: 'prev' | 'next') => () => {\r\n    onArrowClick && onArrowClick({ direction });\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display='flex' justifyContent='space-between' width={150}>\r\n        <Button variant='contained' onClick={handleArrowClick('prev')}>\r\n          <ArrowLeft />\r\n        </Button>\r\n\r\n        <Button variant='contained' onClick={handleArrowClick('next')}>\r\n          <ArrowRight />\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport moment from 'moment';\r\nimport { IDateRange } from \"../../../types/date-range\";\r\nimport { IStatus } from \"../../../types/status\";\r\nimport { IDriver, IScheduleScheme, ITableResponse } from \"../../../types/table-data\";\r\n\r\nexport type IScheduleScliceState = {\r\n  selectedDate: string;\r\n  drivers?: IDriver[];\r\n  statuses?: IStatus[];\r\n  scheduleScheme?: IScheduleScheme[];\r\n}\r\n\r\nconst initialState: IScheduleScliceState = {\r\n  selectedDate: moment().toISOString(),\r\n}\r\n\r\nconst fetchTableData = createAsyncThunk(\r\n  'schedule/fetchTableData',\r\n  async (dateRange: IDateRange) => {\r\n    const response: ITableResponse = await new Promise(r => {\r\n      setTimeout(r, 1000);\r\n    });\r\n\r\n    return response;\r\n  }\r\n)\r\n\r\nexport const scheduleSlice = createSlice({\r\n  name: 'schedule',\r\n  initialState,\r\n  reducers: {\r\n    setScheduleSliceState: (state, action: PayloadAction<Partial<IScheduleScliceState>>) => {\r\n      return { ...state, ...action.payload }\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder.addCase(fetchTableData.fulfilled, (state, action) => {\r\n      return { ...state, ...action.payload }\r\n    })\r\n  }\r\n})\r\n\r\nexport const { setScheduleSliceState } = scheduleSlice.actions;\r\nexport default scheduleSlice.reducer;","import ScheduleFooterContainer from \"./schedule-footer-container\";\r\n\r\nexport const ScheduleFooter = ScheduleFooterContainer;","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport ScheduleFooter, { IScheduleFooterArrowClickEvent } from './schedule-footer';\r\nimport moment from 'moment';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\n\r\nexport default function ScheduleFooterContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n\r\n  const handleArrowClick = (e: IScheduleFooterArrowClickEvent) => {\r\n    const newDate = moment(selectedDate);\r\n\r\n    if (e.direction === 'prev') {\r\n      newDate.subtract(1, 'day');\r\n    } else {\r\n      newDate.add(1, 'day');\r\n    }\r\n\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleFooter onArrowClick={handleArrowClick} />\r\n  )\r\n}\r\n","import { Button, makeStyles, TextField } from '@material-ui/core';\r\nimport { ArrowLeft, ArrowRight, ConstructionOutlined } from '@material-ui/icons';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nexport type IScheduleDatepickerProps = {\r\n  date?: moment.Moment;\r\n  onDateChange?: (selectedDate: moment.Moment) => any;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: theme.palette.grey[300],\r\n    borderRadius: 4\r\n  },\r\n  dateString: {\r\n    display: 'inline-block',\r\n    width: 120,\r\n    textAlign: 'center',\r\n    cursor: 'default',\r\n    textTransform: 'capitalize',\r\n    fontWeight: 500\r\n  }\r\n}));\r\n\r\nexport default function ScheduleDatepicker(props: IScheduleDatepickerProps) {\r\n  const { date = moment(), onDateChange } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = (direction: 'prev' | 'next') => () => {\r\n    let newDate;\r\n\r\n    if (direction === 'prev') {\r\n      newDate = moment(date).subtract(1, 'month').set('date', 1);\r\n    } else {\r\n      newDate = moment(date).add(1, 'month').set('date', 1);\r\n    }\r\n\r\n    onDateChange && onDateChange(newDate);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={handleDateChange('prev')}>\r\n        <ArrowLeft />\r\n      </Button>\r\n      \r\n      <Moment className={classes.dateString} date={date} format='MMMM, YYYY' />\r\n\r\n      <Button onClick={handleDateChange('next')}>\r\n        <ArrowRight />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ScheduleDatepicker from '../schedule-datepicker/schedule-datepicker';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    marginRight: 10\r\n  },\r\n}));\r\n\r\nexport type IScheduleHeaderProps = {\r\n  date: moment.Moment;\r\n  onDateChange?: (newDate: moment.Moment) => any;\r\n}\r\n\r\nexport default function ScheduleHeader(props: IScheduleHeaderProps) {\r\n  const classes = useStyles();\r\n  const { date, onDateChange } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <span className={classes.title}>Календарь списаний</span>\r\n      <Button variant='contained' color='secondary'>Списать аренду</Button>\r\n      <Box marginLeft='auto'>\r\n        <ScheduleDatepicker date={date} onDateChange={onDateChange} />\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n","import ScheduleHeaderContainer from './schedule-header-container';\r\n\r\nexport const ScheduleHeader = ScheduleHeaderContainer;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setScheduleSliceState } from '../../../redux/features/schedule/schedule.slice';\r\nimport ScheduleHeader from './schedule-header'\r\nimport { IRootState } from '../../../redux/root-reducer';\r\nimport moment from 'moment';\r\n\r\nexport default function ScheduleHeaderContainer() {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector((state: IRootState) => state.schedule.selectedDate);\r\n  \r\n  const handleDateChange = (newDate: moment.Moment) => {\r\n    dispatch(setScheduleSliceState({ selectedDate: newDate.toISOString() }));\r\n  }\r\n\r\n  return (\r\n    <ScheduleHeader date={moment(selectedDate)} onDateChange={handleDateChange} />\r\n  )\r\n}\r\n","import { makeStyles, Paper } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { EditDailySchedule } from './edit-daily-schedule'\r\nimport { ScheduleBody } from './schedule-body'\r\nimport { ScheduleFooter } from './schedule-footer'\r\nimport { ScheduleHeader } from './schedule-header'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexFlow: 'column',\r\n    padding: 20,\r\n    maxWidth: '100%',\r\n    boxSizing: 'border-box'\r\n  }\r\n}))\r\n\r\nexport default function Schedule() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <ScheduleHeader />\r\n      <ScheduleBody />\r\n      <ScheduleFooter />\r\n\r\n      <EditDailySchedule fullWidth />\r\n    </Paper>\r\n  )\r\n}\r\n","import ScheduleContainer from \"./schedule-container\";\r\n\r\nexport const Schedule = ScheduleContainer; ","import React from 'react'\r\nimport Schedule from './schedule'\r\n\r\nexport default function ScheduleContainer() {\r\n  return (\r\n    <Schedule />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Schedule } from './components/schedule';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    padding: 20,\r\n    minWidth: 780\r\n  }\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Schedule />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport scheduleReducer from './features/schedule/schedule.slice'\r\nimport editDailyScheduleModalReducer from './features/edit-daily-schedule-modal/edit-daily-schedule-modal.slice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  schedule: scheduleReducer,\r\n  editDailyScheduleModal: editDailyScheduleModalReducer\r\n});\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'moment/locale/ru';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReducer } from './redux/root-reducer';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type IAppDispatch = typeof store.dispatch;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}